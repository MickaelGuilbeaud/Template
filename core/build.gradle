apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "org.jlleitschuh.gradle.ktlint"

android {
    compileSdkVersion = androidCompileSdkVersion

    defaultConfig {
        minSdkVersion(androidMinSdkVersion)
        targetSdkVersion(androidTargetSdkVersion)

        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }

    flavorDimensions "env"
    productFlavors {
        dev {
            dimension "env"
        }
        preprod {
            dimension "env"
        }
        prod {
            dimension "env"
        }
    }
}

dependencies {
    // Kotlin
    api(Dependencies.kotlinStandardLibrary)
    api(Dependencies.kotlinCoroutines)

    // AndroidX - General
    api(Dependencies.activity)
    api(Dependencies.appcompat)
    api(Dependencies.core)
    api(Dependencies.fragment)
    api(Dependencies.vectorDrawable)
    api(Dependencies.vectorDrawableAnimated)

    // AndroidX - UI
    api(Dependencies.constraintLayout)
    api(Dependencies.recyclerView)

    // AndroidX - Lifecycle
    api(Dependencies.lifecycle)
    api(Dependencies.livedata)
    api(Dependencies.viewModel)

    // UI
    api(Dependencies.material)
    api(Dependencies.glide)
    kapt(Dependencies.glideProcessor)
    api(Dependencies.glideOkhttp3)

    // Network
    api(Dependencies.okHttpClient)
    api(Dependencies.okHttpLogging)
    api(Dependencies.retrofitClient)
    api(Dependencies.retrofitAdapterRxJava2)

    // Rx
    api(Dependencies.rxJava)
    api(Dependencies.rxAndroid)
    api(Dependencies.rxKotlin)

    // Firebase
    api(Dependencies.firebaseCore)
    api(Dependencies.firebaseCrashlytics)

    // Tools
    api(Dependencies.timber)
}